Examples of Cypher usage



1. Load CSV with parsed rhymes (without using Python)

LOAD CSV WITH HEADERS FROM "file:///xix_parsed/edges.csv" AS csv
MERGE (source:Word { word: csv.source })
MERGE (target:Word { word: csv.target })
CREATE UNIQUE (source)-[r:RHYME {path: csv.path, openness: csv.openness, exactness: csv.exactness, degree_exactness: csv.degree_exactness,
                                        richness: csv.richness,
                                        depth: csv.depth,
                                        assonance: csv.assonance,
                                        dissonance: csv.dissonance,
                                        rhyming: csv.rhyming,
                                        position: csv.position,
                                        meter1: csv.meter1,
                                        meter2: csv.meter2
                                         }]->(target)

2. Amount of rhymes of a certain author and type

MATCH (n)-[r]->(m) 
WHERE r.path =~ 'radish.*' AND r.exactness='inexact' AND r.position='male'
RETURN count(r)

3. Rhymes with certain endings (imperative plural)

MATCH (n)-[r]->(m)
WHERE n.word=~'.*[иь]̀?те' and m.word='.*[иь]̀?те'
RETURN n, m

4. Rhymes in specific meter (iambic tetrameter)

MATCH (n)-[r]->(m)
WHERE n.meter=~'Я4.*' and m.meter=~'Я4.*'
RETURN n, m

5. Rhyme for a certain word

MATCH (n)-[r]->(m) 
WHERE n.word = 'шо̀рохи'
RETURN n, m

6. Amount of open approximate rhymes (приблизительные)

MATCH (n)-[r]->(m)
WHERE r.exactness='exact' AND 
substring(n.word, length(n.word)-1, length(n.word)) =~'[уеыаоэяию]' AND 
substring(m.word, length(m.word)-1, length(m.word)) =~ '[уеыаоэяию]' AND 
substring(n.word, length(n.word)-1, length(n.word)) <> substring(m.word, length(m.word)-1, length(m.word))
RETURN count(r)

7. Iotated rhymes (йотированные)

MATCH (n)-[r]->(m)
WHERE (m.word =~ '.*й' AND n.word =~ '.*[уеыаоэяию]') OR (n.word =~ '.*й' AND m.word =~ '.*[уеыаоэяию]')
RETURN n, m
